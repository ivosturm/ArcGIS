// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.32/esri/copyright.txt for details.
//>>built
define("esri/dijit/geoenrichment/utils/MathUtil",[],function(){function f(a){return Array.isArray(a)?a:[a.x,a.y]}function m(a){return Array.isArray(a)?a:[a.x,a.y,a.x+a.w,a.y+a.h]}function n(a){return Array.isArray(a)?{x:a[0],y:a[1],w:a[2]-a[0],h:a[3]-a[1]}:a}function l(a){return[[a[0],a[1]],[a[2],a[1]],[a[2],a[3]],[a[0],a[3]],[a[0]+(a[2]-a[0])/2,a[1]+(a[3]-a[1])/2]]}var e={rotatePointAroundPoint:function(a,b,d){d=e.degToRad(d);var c=f(a),g=f(b);b=Math.cos(d)*(g[0]-c[0])-Math.sin(d)*(g[1]-c[1])+c[0];
d=Math.sin(d)*(g[0]-c[0])+Math.cos(d)*(g[1]-c[1])+c[1];return Array.isArray(a)?[b,d]:{x:b,y:d}},degToRad:function(a){return a*Math.PI/180},radToDeg:function(a){return 180*a/Math.PI},cosDeg:function(a){return Math.cos(e.degToRad(a))},sinDeg:function(a){return Math.sin(e.degToRad(a))},angleTo180_180Range:function(a){a=(a+180)%360;0>a&&(a=360+a);return a-180},angleTo0_360Range:function(a){a%=360;0>a&&(a=360+a);return a},calcVectorLength:function(a){var b=a[0]-a[2];a=a[1]-a[3];return Math.sqrt(b*b+a*
a)},addPointToVector:function(a,b){b=f(b);a=a.slice();a[0]+=b[0];a[1]+=b[1];a[2]+=b[0];a[3]+=b[1];return a},subtractPointFromVector:function(a,b){b=f(b);a=a.slice();a[0]-=b[0];a[1]-=b[1];a[2]-=b[0];a[3]-=b[1];return a},putVectorToOrigin:function(a){return e.subtractPointFromVector(a,[a[0],a[1]])},normalizeVector:function(a){a=e.putVectorToOrigin(a);var b=e.calcVectorLength(a);a[2]/=b;a[3]/=b;return a},calcDotProduct:function(a,b){a=e.putVectorToOrigin(a);b=e.putVectorToOrigin(b);return a[2]*b[2]+
a[3]*b[3]},calcAngleBetweenVectors:function(a,b){a=e.normalizeVector(a);b=e.normalizeVector(b);return Math.acos(e.calcDotProduct(a,b))},addLengthToVector:function(a,b){var d=e.calcVectorLength(a),c=[a[0],a[1]];a=e.normalizeVector(a);a[2]*=d+b;a[3]*=d+b;return e.addPointToVector(a,c)},rotateVectorAroundPoint:function(a,b,d){b=f(b);var c=e.rotatePointAroundPoint(b,[a[0],a[1]],d);a=e.rotatePointAroundPoint(b,[a[2],a[3]],d);return[c[0],c[1],a[0],a[1]]},toLineABC:function(a){var b=a[3]-a[1],d=a[0]-a[2];
return[b,d,-b*a[0]-d*a[1]]},intersect2Lines:function(a,b){var d=e.toLineABC(a),c=e.toLineABC(b);b=d[0];a=d[1];var d=d[2],g=c[0],k=c[1],c=c[2],h=b*k-g*a;return 0===h?null:[(c*a-d*k)/h,(g*d-b*c)/h]},intersectLineWithRect:function(a,b){function d(c,d){(c=e.intersect2Lines(a,[c[0],c[1],d[0],d[1]]))&&e.isPointInRect(b,c)&&f.push(c)}var c=l(b),g=c[0],k=c[1],h=c[2],c=c[3],f=[];d(g,k);d(k,h);d(h,c);d(c,g);if(2!==f.length)return null;g=[f[0][0],f[0][1],f[1][0],f[1][1]];return e.calcVectorLength(g)?g:null},
isPointInRect:function(a,b){a=m(a);b=f(b);var d=a[2]-a[0],c=a[3]-a[1];return!(b[0]<a[0]||b[0]>a[0]+d||b[1]<a[1]||b[1]>a[1]+c)},isRectInRect:function(a,b){return e.checkRectsIntersect([a,b])&&l(m(a)).every(function(a){return e.isPointInRect(b,a)})},checkRectsIntersect:function(a){a=a.map(m);return a.every(function(b){var d=l(b);return a.every(function(a){return b===a?!0:d.some(function(b){return e.isPointInRect(a,b)})||l(a).some(function(a){return e.isPointInRect(b,a)})})})},getRotatedRectBox:function(a,
b){var d=!Array.isArray(a);a=m(a);var c=l(a);a=c[0];var g=c[1],f=c[2],h=c[3],c=c[4];a=e.rotatePointAroundPoint(c,a,b);g=e.rotatePointAroundPoint(c,g,b);f=e.rotatePointAroundPoint(c,f,b);h=e.rotatePointAroundPoint(c,h,b);a=e.getPointsExtent([a,g,f,h]);return d?n(a):a},uniteRects:function(a){var b=!Array.isArray(a[0]);a=a.map(m);var d=[];a.forEach(function(a){d=d.concat(l(a))});a=e.getPointsExtent(d);return b?n(a):a},getPointsExtent:function(a){var b=!Array.isArray(a[0]),d=Infinity,c=-Infinity,e=Infinity,
k=-Infinity;a.forEach(function(a){a=f(a);d=Math.min(d,a[0]);c=Math.max(c,a[0]);e=Math.min(e,a[1]);k=Math.max(k,a[1])});a=[d,e,c,k];return b?n(a):a}};return e});